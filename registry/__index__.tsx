// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  index: {
    name: "index",
    description: "",
    type: "registry:style",
    registryDependencies: ["utils"],
    files: [],
    component: null,
    meta: undefined,
  },
  "swipe-row": {
    name: "swipe-row",
    description: "A swipe row for providing actions of swipe of left and right",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/swipe-row.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/swipe-row.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/swipe-row.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  discussion: {
    name: "discussion",
    description:
      "A component for displaying nested discussions or comment threads.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/discussion.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/discussion.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/discussion.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "spinning-circle": {
    name: "spinning-circle",
    description:
      "A customizable spinning circle loader component for indicating loading states in your application. Features smooth animations and optional loading messages.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/spinning-circle.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/spinning-circle.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/spinning-circle.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "morphing-square": {
    name: "morphing-square",
    description:
      "A customizable morphing square loader component for indicating loading states in your application. Features smooth shape transitions and optional loading messages.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/morphing-square.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/morphing-square.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/morphing-square.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "orbital-loader": {
    name: "orbital-loader",
    description:
      "A customizable orbital loader component for indicating loading states in your application. Features smooth orbital animations and optional loading messages.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/orbital-loader.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/orbital-loader.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/orbital-loader.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "typewriter-loader": {
    name: "typewriter-loader",
    description:
      "A customizable typewriter loader component for indicating loading states in your application. Features smooth typing animations and customizable text content.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/typewriter-loader.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/typewriter-loader.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/typewriter-loader.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "profile-menu": {
    name: "profile-menu",
    description:
      "An animated collapsible profile menu component with smooth transitions and customizable content sections.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/profile-menu.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/profile-menu.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/profile-menu.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  checkbox: {
    name: "checkbox",
    description:
      "An animated checkbox component with smooth transitions and hover effects built on Radix UI primitives.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/checkbox.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/checkbox.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/checkbox.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "bouncing-dots": {
    name: "bouncing-dots",
    description:
      "An animated loading indicator featuring three bouncing dots with customizable colors and spacing.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/bouncing-dots.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/bouncing-dots.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/bouncing-dots.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "wave-loader": {
    name: "wave-loader",
    description:
      "An animated loading indicator featuring vertical bars that scale up and down in a wave-like pattern to indicate loading states.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/wave-loader.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/wave-loader.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/wave-loader.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "voice-input": {
    name: "voice-input",
    description:
      "An interactive voice recording interface with animated visual feedback, timer display, and customizable start/stop callbacks.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/voice-input.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/voice-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/voice-input.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "expandable-button": {
    name: "expandable-button",
    description:
      " A button that smoothly transitions between collapsed and expanded states using spring animations. Shows only an icon when collapsed and reveals text alongside the icon when expanded, perfect for responsive layouts and space-saving interfaces.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/expandable-button.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/expandable-button.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/expandable-button.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "liquid-glass-button": {
    name: "liquid-glass-button",
    description:
      "A glassmorphic button component with backdrop blur effects and liquid-like visual styling for modern interfaces.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/liquid-glass-button.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/liquid-glass-button.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/liquid-glass-button.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "warp-dialog": {
    name: "warp-dialog",
    description:
      "A visually striking dialog component with 3D warp animations and smooth transitions. Features perspective transformations, animated backgrounds, and spring-based motion effects for an immersive user experience.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/warp-dialog.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/warp-dialog.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/warp-dialog.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "word-rotate": {
    name: "word-rotate",
    description:
      "A text animation component that smoothly rotates through an array of words with customizable duration and motion effects.",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/molecule-ui/word-rotate.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/word-rotate.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/molecule-ui/word-rotate.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "swipe-row-demo": {
    name: "swipe-row-demo",
    description: "A preview component for swipe row",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/swipe-row", "avatar"],
    files: [
      {
        path: "registry/example/swipe-row-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/swipe-row-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/swipe-row-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "swipe-row-left-demo": {
    name: "swipe-row-left-demo",
    description:
      "A demo component for adding actions only to left swipe in swipe row",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/swipe-row", "avatar"],
    files: [
      {
        path: "registry/example/swipe-row-left-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/swipe-row-left-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/swipe-row-left-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "swipe-row-right-demo": {
    name: "swipe-row-right-demo",
    description:
      "A demo component for adding actions only to right swipe in swipe row",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/swipe-row", "avatar"],
    files: [
      {
        path: "registry/example/swipe-row-right-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/swipe-row-right-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/swipe-row-right-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "swipe-row-list-demo": {
    name: "swipe-row-list-demo",
    description: "A group of Swipe Row representing a list view",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/swipe-row", "avatar"],
    files: [
      {
        path: "registry/example/swipe-row-list-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/swipe-row-list-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/swipe-row-list-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "discussion-demo": {
    name: "discussion-demo",
    description: "Preview component for discussion demo",
    type: "registry:example",
    registryDependencies: [
      "avatar",
      "scroll-area",
      "https://moleculeui.design/r/discussion",
    ],
    files: [
      {
        path: "registry/example/discussion-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/discussion-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/discussion-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "spinning-circle-demo": {
    name: "spinning-circle-demo",
    description:
      "A demo component showcasing a spinning circle loading indicator",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/spinning-circle"],
    files: [
      {
        path: "registry/example/spinning-circle-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/spinning-circle-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/spinning-circle-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "spinning-circle-with-message-demo": {
    name: "spinning-circle-with-message-demo",
    description:
      "A demo component showcasing a spinning circle loading indicator with message",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/spinning-circle"],
    files: [
      {
        path: "registry/example/spinning-circle-with-message-demo.tsx",
        type: "registry:ui",
        target:
          "components/molecule-ui/example/spinning-circle-with-message-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/spinning-circle-with-message-demo.tsx"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "morphing-square-demo": {
    name: "morphing-square-demo",
    description:
      "A demo component showcasing a morphing square loading indicator",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/morphing-square"],
    files: [
      {
        path: "registry/example/morphing-square-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/morphing-square-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/morphing-square-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "morphing-square-with-message-demo": {
    name: "morphing-square-with-message-demo",
    description:
      "A demo component showcasing a morphing square loading indicator with message",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/morphing-square"],
    files: [
      {
        path: "registry/example/morphing-square-with-message-demo.tsx",
        type: "registry:ui",
        target:
          "components/molecule-ui/example/morphing-square-with-message-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/morphing-square-with-message-demo.tsx"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "orbital-loader-demo": {
    name: "orbital-loader-demo",
    description: "A demo component showcasing a orbital loading indicator",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/orbital-loader"],
    files: [
      {
        path: "registry/example/orbital-loader-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/orbital-loader-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/orbital-loader-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "orbital-loader-with-message-demo": {
    name: "orbital-loader-with-message-demo",
    description:
      "A demo component showcasing a orbital loading indicator with message",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/orbital-loader"],
    files: [
      {
        path: "registry/example/orbital-loader-with-message-demo.tsx",
        type: "registry:ui",
        target:
          "components/molecule-ui/example/orbital-loader-with-message-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/orbital-loader-with-message-demo.tsx"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "typewriter-loader-demo": {
    name: "typewriter-loader-demo",
    description:
      "A demo component showcasing a typewriter loading indicator demo",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/typewriter-loader"],
    files: [
      {
        path: "registry/example/typewriter-loader-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/typewriter-loader-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/typewriter-loader-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "typewriter-loader-with-custom-text-demo": {
    name: "typewriter-loader-with-custom-text-demo",
    description:
      "A demo component showcasing a typewriter loading indicator with custom text demo",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/typewriter-loader"],
    files: [
      {
        path: "registry/example/typewriter-loader-with-custom-text-demo.tsx",
        type: "registry:ui",
        target:
          "components/molecule-ui/example/typewriter-loader-with-custom-text-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/typewriter-loader-with-custom-text-demo.tsx"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "profile-menu-demo": {
    name: "profile-menu-demo",
    description: "Demo for the animated profile menu",
    type: "registry:example",
    registryDependencies: [
      "separator",
      "avatar",
      "https://moleculeui.design/r/profile-menu",
    ],
    files: [
      {
        path: "registry/example/profile-menu-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/profile-menu-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/profile-menu-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "checkbox-demo": {
    name: "checkbox-demo",
    description: "A demo component showcasing the animated checkbox",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/checkbox"],
    files: [
      {
        path: "registry/example/checkbox-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/checkbox-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/checkbox-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "bouncing-dots-demo": {
    name: "bouncing-dots-demo",
    description:
      "A demo component showcasing the bouncing dots loader component",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/bouncing-dots"],
    files: [
      {
        path: "registry/example/bouncing-dots-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/bouncing-dots-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/bouncing-dots-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "bouncing-dots-with-message-demo": {
    name: "bouncing-dots-with-message-demo",
    description:
      "A demo component showcasing the bouncing dots loader component with message",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/bouncing-dots"],
    files: [
      {
        path: "registry/example/bouncing-dots-with-message-demo.tsx",
        type: "registry:ui",
        target:
          "components/molecule-ui/example/bouncing-dots-with-message-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/bouncing-dots-with-message-demo.tsx"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "wave-loader-demo": {
    name: "wave-loader-demo",
    description: "A demo component showcasing the wave loader component",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/wave-loader"],
    files: [
      {
        path: "registry/example/wave-loader-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/wave-loader-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/wave-loader-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "wave-loader-with-message-demo": {
    name: "wave-loader-with-message-demo",
    description:
      "A demo component showcasing the wave loader component with message",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/wave-loader"],
    files: [
      {
        path: "registry/example/wave-loader-with-message-demo.tsx",
        type: "registry:ui",
        target:
          "components/molecule-ui/example/wave-loader-with-message-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/wave-loader-with-message-demo.tsx"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "voice-input-demo": {
    name: "voice-input-demo",
    description: "A demo of the animated voice input component",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/voice-input"],
    files: [
      {
        path: "registry/example/voice-input-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/voice-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/voice-input-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "liquid-glass-button-demo": {
    name: "liquid-glass-button-demo",
    description: "demo",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/liquid-glass-button"],
    files: [
      {
        path: "registry/example/liquid-glass-button-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/liquid-glass-button-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/liquid-glass-button-demo.tsx"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "expandable-button-demo": {
    name: "expandable-button-demo",
    description:
      "A demonstration of the expandable button component with an inbox icon that smoothly transitions between collapsed and expanded states.",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/expandable-button"],
    files: [
      {
        path: "registry/example/expandable-button-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/expandable-button-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/expandable-button-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "expandable-button-group-demo": {
    name: "expandable-button-group-demo",
    description:
      "A demonstration of multiple expandable buttons working together as a group where only one button can be expanded at a time, perfect for creating animated navigation tabs or menu systems.",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/expandable-button"],
    files: [
      {
        path: "registry/example/expandable-button-group-demo.tsx",
        type: "registry:ui",
        target:
          "components/molecule-ui/example/expandable-button-group-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/expandable-button-group-demo.tsx"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "warp-dialog-demo": {
    name: "warp-dialog-demo",
    description:
      "A demonstration of the warp dialog component showcasing its 3D perspective animations with a welcome message and action buttons.",
    type: "registry:example",
    registryDependencies: [
      "https://moleculeui.design/r/warp-dialog",
      '"button"',
    ],
    files: [
      {
        path: "registry/example/warp-dialog-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/warp-dialog-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/warp-dialog-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "word-rotate-demo": {
    name: "word-rotate-demo",
    description:
      "A demo component showcasing the word rotate text animation effect that cycles through different words smoothly.",
    type: "registry:example",
    registryDependencies: ["https://moleculeui.design/r/word-rotate"],
    files: [
      {
        path: "registry/example/word-rotate-demo.tsx",
        type: "registry:ui",
        target: "components/molecule-ui/example/word-rotate-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/word-rotate-demo.tsx")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  utils: {
    name: "utils",
    description: "",
    type: "registry:lib",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/lib/utils.ts",
        type: "registry:lib",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/lib/utils.ts")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
}
