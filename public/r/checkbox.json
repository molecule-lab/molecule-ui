{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "checkbox",
  "type": "registry:ui",
  "title": "Checkbox",
  "author": "Rushil Dhinoja",
  "description": "An animated checkbox component with smooth transitions and hover effects built on Radix UI primitives.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/molecule-ui/checkbox.tsx",
      "content": "\"use client\"\n\nimport React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { motion } from \"motion/react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport function Checkbox({\n  className,\n  checked: checkedProp,\n  onCheckedChange: setCheckedProp,\n  disabled,\n  defaultChecked,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  const [_checked, _setChecked] =\n    React.useState<CheckboxPrimitive.CheckedState>(defaultChecked ?? false)\n\n  const checked = checkedProp ?? _checked\n\n  const setChecked = React.useCallback(\n    (\n      value:\n        | CheckboxPrimitive.CheckedState\n        | ((value: CheckboxPrimitive.CheckedState) => boolean),\n    ) => {\n      const checkedState = typeof value === \"function\" ? value(checked) : value\n      if (setCheckedProp) {\n        setCheckedProp(checkedState)\n      } else {\n        _setChecked(checkedState)\n      }\n    },\n    [setCheckedProp, checked],\n  )\n\n  return (\n    <motion.div\n      whileTap={disabled ? undefined : { scale: 0.95 }}\n      whileHover={disabled ? undefined : { scale: 1.05 }}\n      transition={{\n        type: \"spring\",\n        stiffness: 400,\n        damping: 25,\n      }}\n    >\n      <CheckboxPrimitive.Root\n        checked={checked}\n        onCheckedChange={(value) => setChecked(!!value)}\n        disabled={disabled}\n        className={cn(\n          \"flex items-center justify-center border-input focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border transition-all duration-200 outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 hover:shadow-sm hover:border-primary/20\",\n          className,\n        )}\n        {...props}\n      >\n        <motion.svg\n          className=\"h-full w-full\"\n          viewBox=\"0 0 12 12\"\n          fill=\"none\"\n          initial={false}\n          style={{ scale: 1, opacity: 1 }}\n        >\n          <motion.path\n            d=\"M2.5 6L4.5 8L9.5 3\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n            animate={checked ? \"checked\" : \"unchecked\"}\n            variants={{\n              checked: {\n                pathLength: 1,\n                strokeDasharray: \"1 1\",\n                opacity: 1,\n                transition: {\n                  pathLength: { duration: 0.2, ease: \"easeInOut\", delay: 0.1 },\n                  strokeDasharray: {\n                    duration: 0.2,\n                    ease: \"easeInOut\",\n                    delay: 0.1,\n                  },\n                  opacity: { duration: 0.1, ease: \"easeInOut\" },\n                },\n              },\n              unchecked: {\n                pathLength: 0,\n                strokeDasharray: \"0 1\",\n                opacity: 0,\n                transition: {\n                  pathLength: { duration: 0.3, ease: \"easeInOut\" },\n                  strokeDasharray: {\n                    duration: 0.3,\n                    ease: \"easeInOut\",\n                    delay: 0.1,\n                  },\n                  opacity: { duration: 0.3, ease: \"easeInOut\", delay: 0.1 },\n                },\n              },\n            }}\n          />\n        </motion.svg>\n      </CheckboxPrimitive.Root>\n    </motion.div>\n  )\n}\n",
      "type": "registry:ui",
      "target": "components/molecule-ui/checkbox.tsx"
    }
  ]
}