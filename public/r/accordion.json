{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "accordion",
  "type": "registry:ui",
  "title": "Accordion",
  "author": "Rushil Dhinoja",
  "description": "A collapsible content component with smooth animations, built on Radix UI primitives and enhanced with Framer Motion for fluid transitions.",
  "dependencies": [
    "motion",
    "@radix-ui/react-accordion"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/molecule-ui/accordion.tsx",
      "content": "\"use client\"\n\nimport React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\nimport { motion } from \"motion/react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst accordionContentVariants = {\n  open: {\n    height: \"auto\",\n    opacity: 1,\n    filter: \"blur(0px)\",\n  },\n  closed: {\n    height: 0,\n    opacity: 0,\n    filter: \"blur(4px)\",\n  },\n}\n\nfunction Accordion({\n  className,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Root>) {\n  return (\n    <AccordionPrimitive.Root\n      data-slot=\"accordion\"\n      className={cn(\"bg-primary-foreground rounded-lg border px-5\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AccordionItem({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Item>) {\n  return (\n    <AccordionPrimitive.Item\n      data-slot=\"accordion-item\"\n      className={cn(\"relative border-b last:border-b-0\", className)}\n      {...props}\n    >\n      {children}\n    </AccordionPrimitive.Item>\n  )\n}\n\nfunction AccordionTrigger({\n  children,\n  className,\n  showIcon = true,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Trigger> & {\n  showIcon?: boolean\n}) {\n  return (\n    <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n        data-slot=\"accordion-header\"\n        className=\"group active:text-foreground/50 focus-visible:bg-muted flex flex-1 items-start justify-between gap-4 py-4 font-semibold disabled:opacity-50\"\n        {...props}\n      >\n        {children}\n        {showIcon && (\n          <ChevronDown className=\"size-6 duration-300 group-data-[state=open]:rotate-180\" />\n        )}\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  )\n}\n\nfunction AccordionContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Content>) {\n  const contentRef = React.useRef<HTMLDivElement>(null)\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  React.useEffect(() => {\n    const element = contentRef.current?.parentElement\n    if (!element) return\n\n    const observer = new MutationObserver(() => {\n      const state = element.getAttribute(\"data-state\")\n      setIsOpen(state === \"open\")\n    })\n\n    observer.observe(element, {\n      attributes: true,\n      attributeFilter: [\"data-state\"],\n    })\n\n    // Set initial state\n    const initialState = element.getAttribute(\"data-state\")\n    setIsOpen(initialState === \"open\")\n\n    return () => observer.disconnect()\n  }, [])\n\n  return (\n    <AccordionPrimitive.Content\n      data-slot=\"accordion-content\"\n      forceMount\n      className=\"overflow-hidden\"\n      {...props}\n    >\n      <motion.div\n        ref={contentRef}\n        animate={isOpen ? \"open\" : \"closed\"}\n        initial={\"closed\"}\n        variants={accordionContentVariants}\n        transition={{\n          height: {\n            duration: 0.3,\n            ease: \"easeOut\",\n          },\n          opacity: {\n            duration: 0.2,\n            delay: 0.1,\n          },\n          filter: {\n            duration: 0.15,\n            delay: 0.05,\n          },\n        }}\n      >\n        <div className={cn(\"text-muted-foreground pb-4\", className)}>\n          {children}\n        </div>\n      </motion.div>\n    </AccordionPrimitive.Content>\n  )\n}\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n",
      "type": "registry:ui",
      "target": "components/molecule-ui/accordion.tsx"
    }
  ]
}