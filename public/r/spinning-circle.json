{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "spinning-circle",
  "type": "registry:ui",
  "title": "Spinning Circle",
  "author": "Rushil Dhinoja",
  "description": "A customizable spinning circle loader component for indicating loading states in your application. Features smooth animations and optional loading messages.",
  "dependencies": [
    "motion",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/molecule-ui/spinning-circle.tsx",
      "content": "\"use client\"\n\nimport React from \"react\"\nimport { cva } from \"class-variance-authority\"\nimport { HTMLMotionProps, motion } from \"motion/react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst spinningCircleVariants = cva(\"flex gap-2 items-center justify-center\", {\n  variants: {\n    messagePlacement: {\n      bottom: \"flex-col\",\n      top: \"flex-col-reverse\",\n      right: \"flex-row\",\n      left: \"flex-row-reverse\",\n    },\n  },\n  defaultVariants: {\n    messagePlacement: \"bottom\",\n  },\n})\n\nexport interface SpinningCircleProps {\n  message?: string\n  /**\n   * Position of the message relative to the spinner.\n   * @default bottom\n   */\n  messagePlacement?: \"top\" | \"bottom\" | \"left\" | \"right\"\n}\n\nexport function SpinningCircle({\n  className,\n  message,\n  messagePlacement = \"bottom\",\n  ...props\n}: HTMLMotionProps<\"div\"> & SpinningCircleProps) {\n  return (\n    <div className={cn(spinningCircleVariants({ messagePlacement }))}>\n      <motion.div\n        className={cn(\n          \"w-8 h-8 border-4 border-t-foreground rounded-full\",\n          className,\n        )}\n        animate={{ rotate: 360 }}\n        transition={{\n          duration: 1,\n          repeat: Number.POSITIVE_INFINITY,\n          ease: \"linear\",\n        }}\n        {...props}\n      />\n      {message && <div>{message}</div>}\n    </div>\n  )\n}\n",
      "type": "registry:ui",
      "target": "components/molecule-ui/spinning-circle.tsx"
    }
  ]
}